---
interface Props {
  class?: string;
  delay?: number;
}

const { class: className = '', delay = 0 } = Astro.props;
---

<div class={`scroll-animate ${className}`} data-delay={delay}>
  <slot />
</div>

<script>
  const observerOptions = {
    threshold: 0.1,
    rootMargin: '0px 0px -100px 0px'
  };

  const observer = new IntersectionObserver((entries) => {
    entries.forEach((entry) => {
      if (entry.isIntersecting) {
        const delay = entry.target.getAttribute('data-delay');
        const delayMs = delay ? parseInt(delay) * 100 : 0;

        setTimeout(() => {
          entry.target.classList.add('animate-in');
        }, delayMs);

        observer.unobserve(entry.target);
      }
    });
  }, observerOptions);

  document.addEventListener('DOMContentLoaded', () => {
    const elements = document.querySelectorAll('.scroll-animate');
    elements.forEach((el) => observer.observe(el));
  });
</script>

<style>
  .scroll-animate {
    opacity: 0;
    transform: translateY(30px);
    transition: opacity 0.6s ease-out, transform 0.6s ease-out;
  }

  .scroll-animate.animate-in {
    opacity: 1;
    transform: translateY(0);
  }
</style>
